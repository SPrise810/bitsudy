'''

以定位收集图像函数

鼠标定位函数

照片修正函数

图像仿射演示函数

主程序


先给出结论，对该语句用法简单的解释就是：
如果if __name__ == '__main__' 所在模块是被直接运行的，则该语句下代码块被运行
如果所在模块是被导入到其他的python脚本中运行的，则该语句下代码块不被运行。

每个python模块（python文件，也就是此处的 param.py 和 calculate.py）都包含内置的变量__name__
当运行模块被执行的时候__name__等于文件名（包含了后缀.py）；
如果import到其他模块中，则__name__等于模块名称（不包含后缀.py）。
而'__main__'等于当前执行文件的名称（包含了后缀.py）。
进而当模块被直接执行时，__name__ == '__main__'结果为真
所以后续代码可以继续执行。


下边具体的讲解。
首先我们得先明白一个概念：程序入口。
程序入口
对于很多编程语言来说，程序都必须要有一个入口，比如 C，C++，以及完全面向对象的编程语言 Java，C# 等。其中C 和 C++ 都需要有一个 main 函数来作为程序的入口
也就是程序的运行会从 main 函数开始。同样的，Java 和 C# 则必须要有一个包含 Main 方法的主类来作为程序入口。

但和C，C++、Java 以及 C# 等有所不同的是，Python属于脚本语
不像编译型语言那样先将程序编译成二进制再运行，python是动态的逐行解释运行，
也就是从脚本第一行开始运行，没有统一的入口。

python文件有两种使用方法：

第一种：直接作为脚本执行
第二种：import到其他的python脚本中被调用（模块重用）执行，也就是作为模块（库）被导入执行
不管是直接运行还是导入，最顶层的代码都会被运行（Python 用缩进来区分代码层次）。但实际使用过程中，python文件作为模块被其它python脚本调用执行的时候，有的代码我们是不希望被运行的。
if __name__ == '__main__'就相当于是 Python 模拟的程序入口。
Python 本身并没有规定这么写，这只是一种编码习惯。由于模块之间相互引用，不同模块可能都有这样的定义
而入口程序只能有一个。到底哪个入口程序被选中，这取决于__name__的值。
而__name__是内置变量，用于表示当前模块的名字。









'''